
project_domotica.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000086  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000da  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000010c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d2  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000541  00000000  00000000  0000088e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c8  00000000  00000000  00000dcf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001098  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000364  00000000  00000000  00001140  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000a5  00000000  00000000  000014a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001549  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>
  26:	07 c0       	rjmp	.+14     	; 0x36 <__bad_interrupt>
  28:	06 c0       	rjmp	.+12     	; 0x36 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf ed       	ldi	r28, 0xDF	; 223
  30:	cd bf       	out	0x3d, r28	; 61
  32:	22 d0       	rcall	.+68     	; 0x78 <main>
  34:	26 c0       	rjmp	.+76     	; 0x82 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <clear_output_gpio>:
	DDR(port) |= (1 << pin);
	PORT(port) |= (1 << pin);
 }

 void clear_output_gpio(unsigned char port, int pin){
	DDR(port) &= ~(1 << pin);
  38:	e8 2f       	mov	r30, r24
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	3a 97       	sbiw	r30, 0x0a	; 10
  3e:	cf 01       	movw	r24, r30
  40:	88 0f       	add	r24, r24
  42:	99 1f       	adc	r25, r25
  44:	88 0f       	add	r24, r24
  46:	99 1f       	adc	r25, r25
  48:	e8 1b       	sub	r30, r24
  4a:	f9 0b       	sbc	r31, r25
  4c:	22 ad       	ldd	r18, Z+58	; 0x3a
  4e:	81 e0       	ldi	r24, 0x01	; 1
  50:	90 e0       	ldi	r25, 0x00	; 0
  52:	02 c0       	rjmp	.+4      	; 0x58 <__SREG__+0x19>
  54:	88 0f       	add	r24, r24
  56:	99 1f       	adc	r25, r25
  58:	6a 95       	dec	r22
  5a:	e2 f7       	brpl	.-8      	; 0x54 <__SREG__+0x15>
  5c:	98 2f       	mov	r25, r24
  5e:	90 95       	com	r25
  60:	29 23       	and	r18, r25
  62:	22 af       	std	Z+58, r18	; 0x3a
	PORT(port) &= ~(1 << pin);
  64:	23 ad       	ldd	r18, Z+59	; 0x3b
  66:	29 23       	and	r18, r25
  68:	23 af       	std	Z+59, r18	; 0x3b
	
	DDR(port) |= (1 << pin);
  6a:	22 ad       	ldd	r18, Z+58	; 0x3a
  6c:	82 2b       	or	r24, r18
  6e:	82 af       	std	Z+58, r24	; 0x3a
	PORT(port) &= ~(1 << pin);
  70:	83 ad       	ldd	r24, Z+59	; 0x3b
  72:	98 23       	and	r25, r24
  74:	93 af       	std	Z+59, r25	; 0x3b
  76:	08 95       	ret

00000078 <main>:
#include <avr/io.h>
#include "gpio.h"

int main(void)
{
	clear_output_gpio(0xB, 0);
  78:	60 e0       	ldi	r22, 0x00	; 0
  7a:	70 e0       	ldi	r23, 0x00	; 0
  7c:	8b e0       	ldi	r24, 0x0B	; 11
  7e:	dc df       	rcall	.-72     	; 0x38 <clear_output_gpio>
  80:	ff cf       	rjmp	.-2      	; 0x80 <main+0x8>

00000082 <_exit>:
  82:	f8 94       	cli

00000084 <__stop_program>:
  84:	ff cf       	rjmp	.-2      	; 0x84 <__stop_program>
